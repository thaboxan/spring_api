version: '3.8'

services:
  # PostgreSQL Database
  postgres-db:
    image: postgres:15-alpine
    container_name: spring-api-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: todolist
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data:/docker-entrypoint-initdb.d
    networks:
      - spring-api-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d todolist"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Application
  spring-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-api-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/todolist
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - spring-api-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
    driver: local

networks:
  spring-api-network:
    driver: bridge
